@using BusManagementSystem.Service
@using Microsoft.AspNetCore.Mvc.TagHelpers
@inject ILoopServiceInterface _loopServiceInterface
@inject IStopServiceInterface _stopServiceInterface
@model IEnumerable<BusManagementSystem.Models.Route>

@{
    <link rel="stylesheet" href="~/css/route_index.css"/>
    var loopIdString = ViewContext.RouteData.Values["loopId"] as string;
    var loopId = Convert.ToInt32(loopIdString);
    var loop = await _loopServiceInterface.GetLoop(loopId);
    ViewData["Title"] = loop.Name;
}

<div>
    <div id="route-index-header">
        <h1>@loop.Name Loop</h1>
        <a class="btn btn-primary" href="@Url.Action("Create", "Route", new { loopId = loop.Id })">Create New Route</a>
    </div>
    <a href="/Route/SelectLoop">Back to List</a>
    <hr id="separator">
    <table id="bus-table" class="table table-striped">
        <thead>
        <tr>
            <th>@loop.Name Loop</th>
            <th>Stop</th>
            <th>Order</th>
        </tr>
        </thead>
        <tbody>
        @{
            var orderedRoutes = Model.OrderBy(r => r.Order).ToList();
            var totalRoutes = orderedRoutes.Count;
        }
        @for (int i = 0; i < totalRoutes; i++)
        {
            var route = orderedRoutes[i];
            var stop = await _stopServiceInterface.GetStop(route.StopId);

            <tr>
                <td>
                    <div class="btn-group" role="group" aria-label="Move buttons">
                        <form asp-action="MoveUp" method="post">
                            <input type="hidden" name="routeId" value="@route.Id"/>
                            <input type="hidden" name="loopId" value="@loop.Id"/>
                            <button type="submit" class="btn btn-secondary rounded-start me-2" @(i == 0 ? "disabled" : "")>Move Up</button>
                        </form>
                        <form asp-action="MoveDown" method="post">
                            <input type="hidden" name="routeId" value="@route.Id"/>
                            <input type="hidden" name="loopId" value="@loop.Id"/>
                            <button type="submit" class="btn btn-secondary rounded-end" @(i == totalRoutes - 1 ? "disabled" : "")>Move Down</button>
                        </form>
                    </div>
                </td>
                <td>@stop.Name</td>
                <td>@route.Order</td>
                <td>
                    <asp:Button UseSubmitBehavior="false" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteRouteModal_@route.Id" runat="server">Delete</asp:Button>
                </td>
            </tr>

            <div class="modal fade" id="deleteRouteModal_@route.Id" tabindex="-1" aria-labelledby="deleteRouteModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title fs-5" id="deleteStopModalLabel">Delete Stop</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                            </button>
                        </div>
                        <div class="modal-body">
                            Remove @route.Stop.Name from @route.Loop.Name Loop from the database?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" onclick="deleteRoute('@route.Id', '@loopId')">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        }
        </tbody>
    </table>
</div>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script src="./js/bus_actions.js"></script>

    <script>
        function deleteRoute(routeId, loopId) {
            $.ajax({
                url: '/Route/Delete',
                type: 'POST',
                data: {
                    routeId: routeId
                },
                headers: {
                    RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // Include Anti-forgery Token as a header
                },
                success: function (result) {
                    var redirectUrl = '/Route/loop/' + loopId;
                    window.location.href = redirectUrl; 
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }
    </script>
}