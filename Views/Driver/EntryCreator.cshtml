@using System.Text.Json
@using BusManagementSystem.Service
@inject IRouteServiceInterface _routeServiceInterface
@inject IStopServiceInterface _stopServiceInterface
@model BusManagementSystem.ViewModels.EntryCreatorViewModel

@{
    ViewData["Title"] = "Trip Log";
    <link rel="stylesheet" href="~/css/entry_creator.css"/>
    var routes = _routeServiceInterface.GetRoutesWithLoopId(Model.Loop.Id);
}

<div id="entry-creator-container">
    <div id="entry-creator-header">
        <h1>Trip Log</h1>
        <div id="trip-info">
            <span>Driving on <strong>@Html.Raw(Model.Loop.Name)</strong>.</span>
            <span>Bus #<strong>@Html.Raw(Model.Bus.BusNumber)</strong>.</span>
        </div>
    </div>
    <hr id="separator">
    <div id="entry-creator-form-container">
        <form id="entry-creator-form" asp-controller="Entry" asp-action="Create" method="post">
            <div id="form-section">
                <label class="form-label" for="SelectedStopId">Stop:</label>
                <select id="selected-stop-id" asp-for="SelectedStopId">
                    @foreach (var route in routes)
                    {
                        var stop = await _stopServiceInterface.GetStop(route.StopId);
                        <option value=@route.StopId>@stop.Name</option>
                    }
                </select>
            </div>
            <div id="form-section">
                <label class="form-label" asp-for="Entry.Boarded">Passengers boarded:</label>
                <input type="text" placeholder="Enter..." asp-for="Entry.Boarded" class="form-control"/>
            </div>
            <div id="form-section">
                <label class="form-label" asp-for="Entry.LeftBehind">Passengers left behind:</label>
                <input type="text" placeholder="Enter..." asp-for="Entry.LeftBehind" class="form-control"/>
            </div>
            <input type="hidden" asp-for="BusId"/>
            <input type="hidden" asp-for="DriverId">
            <input type="hidden" asp-for="LoopId"/>
            <input type="hidden" asp-for="Entry.Bus.Id" value="@Model.BusId"/>
            <input type="hidden" asp-for="Entry.Loop.Id" value="@Model.LoopId"/>
            <input type="hidden" asp-for="Entry.Stop.Id" value="@Model.SelectedStopId"/>
            <div>
                <input type="submit" class="btn btn-primary" id="entry-creator-button" value="Next Stop"/>
                <a type="submit" class="btn btn-danger" id="end-trip-button" asp-controller="Driver" asp-action="SelectBusLoop">End Trip</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("entry-creator-form").addEventListener("submit", function (event) {
            event.preventDefault();
    
            const formData = new FormData(event.target);
            console.log("Entry form data: ", formData);
    
            fetch(event.target.action, {
                method: 'POST',
                body: formData
            })
            .then(response => {
                if (response.ok) {
                    const stopIdSelect = document.getElementById("selected-stop-id");
                    const nextStopIndex = stopIdSelect.selectedIndex + 1;
    
                    if (nextStopIndex < stopIdSelect.options.length) {
                        stopIdSelect.selectedIndex = nextStopIndex;
                    } else {
                        alert("You have reached the end of the loop. Please start a new trip or end the current trip.");
                    }
    
                    document.querySelector("input[name='Entry.Boarded']").value = "";
                    document.querySelector("input[name='Entry.LeftBehind']").value = "";
                } else {
                    console.log('Error:', response.statusText);
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
    </script>
}